# External Secrets Integration
# Target: Application using external secret management systems
# Chart: pfnapp/deploy
# Features: External secret references, multiple configuration sources, secure credential management

# Application configuration
image:
  repository: mycompany/secure-app
  tag: "v1.5.0"
  pullPolicy: IfNotPresent

replicaCount: 2

# Service configuration
service:
  type: ClusterIP
  port: 8080
  targetPort: 8080

# Simple ingress
simpleIngress:
  enabled: true
  hosts:
    - host: secure-app.example.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    enabled: true
    certManager: true
    hosts:
      - secure-app.example.com

# Environment variables from external sources
env:
  # Basic application settings
  - name: APP_ENV
    value: "production"
  - name: PORT
    value: "8080"
  
  # Database credentials from external secret (created by External Secrets Operator)
  - name: DATABASE_HOST
    valueFrom:
      secretKeyRef:
        name: database-credentials  # Created by External Secrets Operator
        key: host
  - name: DATABASE_USER
    valueFrom:
      secretKeyRef:
        name: database-credentials
        key: username
  - name: DATABASE_PASSWORD
    valueFrom:
      secretKeyRef:
        name: database-credentials
        key: password
  - name: DATABASE_NAME
    valueFrom:
      secretKeyRef:
        name: database-credentials
        key: database
  
  # API keys from external secret management
  - name: STRIPE_API_KEY
    valueFrom:
      secretKeyRef:
        name: payment-secrets  # Created by External Secrets Operator
        key: stripe-api-key
  - name: SENDGRID_API_KEY
    valueFrom:
      secretKeyRef:
        name: notification-secrets
        key: sendgrid-api-key
  - name: JWT_SECRET
    valueFrom:
      secretKeyRef:
        name: auth-secrets
        key: jwt-secret
  
  # Cloud provider credentials
  - name: AWS_ACCESS_KEY_ID
    valueFrom:
      secretKeyRef:
        name: aws-credentials  # Created by External Secrets Operator
        key: access-key-id
  - name: AWS_SECRET_ACCESS_KEY
    valueFrom:
      secretKeyRef:
        name: aws-credentials
        key: secret-access-key
  - name: AWS_REGION
    valueFrom:
      configMapKeyRef:
        name: aws-config  # Created by External Secrets Operator
        key: region
  
  # Feature flags from external ConfigMap
  - name: FEATURE_FLAGS
    valueFrom:
      configMapKeyRef:
        name: app-feature-flags  # Created by External Secrets Operator
        key: flags.json

# Reference external ConfigMaps and Secrets
envFrom:
  # Global application configuration from external ConfigMap
  - configMapRef:
      name: global-app-config  # Created by External Secrets Operator
  # Additional secrets
  - secretRef:
      name: app-runtime-secrets  # Created by External Secrets Operator

# Local configuration for non-sensitive data
configMap:
  enabled: true
  data:
    logging.yaml: |
      logging:
        level: info
        format: json
        outputs:
          - console
          - file:/app/logs/app.log
        
    cache.yaml: |
      cache:
        type: redis
        ttl: 300
        max_entries: 10000
        
    metrics.yaml: |
      metrics:
        enabled: true
        endpoint: /metrics
        port: 9090

# Mount external secrets as files (for applications that read config files)
volumeSecrets:
  enabled: true
  items:
    # TLS certificates from external certificate management
    - name: tls-certs
      mountPath: /app/certs
      existingSecret: app-tls-certificates  # Created by External Secrets Operator
      defaultMode: 0400
      readOnly: true
    
    # SSH keys for git operations
    - name: ssh-keys
      mountPath: /app/.ssh
      existingSecret: git-ssh-keys  # Created by External Secrets Operator
      defaultMode: 0400
      readOnly: true
    
    # Application-specific configuration files
    - name: app-secrets-config
      mountPath: /app/config/secrets
      existingSecret: app-config-secrets  # Created by External Secrets Operator
      defaultMode: 0400
      readOnly: true

# Mount external ConfigMaps as files
volumeConfigMaps:
  enabled: true
  items:
    # External application configuration
    - name: external-config
      mountPath: /app/config
      existingConfigMap: external-app-config  # Created by External Secrets Operator
      readOnly: true
    
    # Monitoring configuration
    - name: monitoring-config
      mountPath: /app/monitoring
      existingConfigMap: monitoring-configuration  # Created by External Secrets Operator
      readOnly: true

# Service account with IRSA/Workload Identity for cloud provider access
serviceAccount:
  create: true
  name: "secure-app-sa"
  annotations:
    # AWS IRSA annotation
    eks.amazonaws.com/role-arn: "arn:aws:iam::123456789012:role/secure-app-role"
    # GCP Workload Identity annotation
    iam.gke.io/gcp-service-account: "secure-app@project.iam.gserviceaccount.com"
    # Azure Workload Identity annotation
    azure.workload.identity/client-id: "12345678-1234-1234-1234-123456789012"

# Health checks
livenessProbe:
  httpGet:
    path: /health/live
    port: 8080
  initialDelaySeconds: 30
  periodSeconds: 10

readinessProbe:
  httpGet:
    path: /health/ready
    port: 8080
  initialDelaySeconds: 10
  periodSeconds: 5

# Resource management
resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 128Mi

# Autoscaling
autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70

# Security context
securityContext:
  runAsNonRoot: true
  runAsUser: 1001
  runAsGroup: 1001
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL

podSecurityContext:
  seccompProfile:
    type: RuntimeDefault

# Enable logging
logging:
  enabled: true

# Additional volumes for temporary storage
volumes:
  - name: tmp-storage
    emptyDir: {}
  - name: app-logs
    emptyDir: {}

volumeMounts:
  - name: tmp-storage
    mountPath: /tmp
  - name: app-logs
    mountPath: /app/logs

# Node preferences
nodeSelector:
  workload-type: secure

# Tolerations for dedicated secure nodes
tolerations:
  - key: workload-type
    operator: Equal
    value: secure
    effect: NoSchedule