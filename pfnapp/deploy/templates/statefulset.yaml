{{- if eq .Values.deploymentType "statefulset" }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "deploy.fullname" . }}{{- if .Values.logging.enabled }}-service{{- end }}
  labels:
    {{- include "deploy.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  serviceName: {{ .Values.statefulset.serviceName | default (printf "%s-headless" (include "deploy.fullname" .)) }}
  selector:
    matchLabels:
      {{- include "deploy.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.logging.enabled }}
        enableLog: "true"
      {{- end }}
      labels:
        {{- include "deploy.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "deploy.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.logging.enabled }}
        - key: "logging"
          operator: "Equal"
          value: "true"
          effect: "NoSchedule"
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            {{- range .Values.containerPorts }}
            - name: {{ .name }}
              containerPort: {{ .containerPort }}
              protocol: TCP
            {{- end }}
          {{- if .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if or .Values.configMap.enabled .Values.secret.enabled .Values.env .Values.envFrom }}
          env:
            {{- if .Values.configMap.enabled }}
            - name: CONFIG_MAP_NAME
              valueFrom:
                configMapKeyRef:
                  name: {{ include "deploy.fullname" . }}-config
                  key: config
            {{- range $key, $value := .Values.configMap.data }}
            - name: {{ $key }}
              valueFrom:
                configMapKeyRef:
                  name: {{ include "deploy.fullname" $ }}-config
                  key: {{ $key }}
            {{- end }}
            {{- end }}
            {{- if .Values.secret.enabled }}
            {{- range $key, $value := .Values.secret.data }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "deploy.fullname" $ }}-secret
                  key: {{ $key }}
            {{- end }}
            {{- end }}
            {{- if .Values.env }}
            {{- range .Values.env }}
            - name: {{ .name }}
              {{- if .value }}
              value: {{ .value | quote }}
              {{- else if .valueFrom }}
              valueFrom:
                {{- if .valueFrom.configMapKeyRef }}
                configMapKeyRef:
                  name: {{ .valueFrom.configMapKeyRef.name }}
                  key: {{ .valueFrom.configMapKeyRef.key }}
                  {{- if .valueFrom.configMapKeyRef.optional }}
                  optional: {{ .valueFrom.configMapKeyRef.optional }}
                  {{- end }}
                {{- else if .valueFrom.secretKeyRef }}
                secretKeyRef:
                  name: {{ .valueFrom.secretKeyRef.name }}
                  key: {{ .valueFrom.secretKeyRef.key }}
                  {{- if .valueFrom.secretKeyRef.optional }}
                  optional: {{ .valueFrom.secretKeyRef.optional }}
                  {{- end }}
                {{- else if .valueFrom.fieldRef }}
                fieldRef:
                  fieldPath: {{ .valueFrom.fieldRef.fieldPath }}
                {{- else if .valueFrom.resourceFieldRef }}
                resourceFieldRef:
                  resource: {{ .valueFrom.resourceFieldRef.resource }}
                  {{- if .valueFrom.resourceFieldRef.containerName }}
                  containerName: {{ .valueFrom.resourceFieldRef.containerName }}
                  {{- end }}
                  {{- if .valueFrom.resourceFieldRef.divisor }}
                  divisor: {{ .valueFrom.resourceFieldRef.divisor }}
                  {{- end }}
                {{- end }}
              {{- end }}
            {{- end }}
            {{- end }}
          {{- end }}
          {{- if .Values.envFrom }}
          envFrom:
            {{- range .Values.envFrom }}
            {{- if .configMapRef }}
            - configMapRef:
                name: {{ .configMapRef.name }}
                {{- if .configMapRef.optional }}
                optional: {{ .configMapRef.optional }}
                {{- end }}
            {{- else if .secretRef }}
            - secretRef:
                name: {{ .secretRef.name }}
                {{- if .secretRef.optional }}
                optional: {{ .secretRef.optional }}
                {{- end }}
            {{- end }}
            {{- end }}
          {{- end }}
          {{- if or .Values.volumeMounts .Values.simpleMounts }}
          volumeMounts:
            {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
            {{- range .Values.simpleMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              {{- if .subPath }}
              subPath: {{ .subPath }}
              {{- end }}
              {{- if .readOnly }}
              readOnly: {{ .readOnly }}
              {{- end }}
            {{- end }}
          {{- end }}
      {{- if or .Values.volumes .Values.simpleMounts }}
      volumes:
        {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- range .Values.simpleMounts }}
        - name: {{ .name }}
          {{- if .configMap }}
          configMap:
            name: {{ .configMap.name }}
            {{- if .configMap.items }}
            items:
              {{- range .configMap.items }}
              - key: {{ .key }}
                path: {{ .path }}
                {{- if .mode }}
                mode: {{ .mode }}
                {{- end }}
              {{- end }}
            {{- end }}
            {{- if .configMap.defaultMode }}
            defaultMode: {{ .configMap.defaultMode }}
            {{- end }}
            {{- if .configMap.optional }}
            optional: {{ .configMap.optional }}
            {{- end }}
          {{- else if .secret }}
          secret:
            secretName: {{ .secret.name }}
            {{- if .secret.items }}
            items:
              {{- range .secret.items }}
              - key: {{ .key }}
                path: {{ .path }}
                {{- if .mode }}
                mode: {{ .mode }}
                {{- end }}
              {{- end }}
            {{- end }}
            {{- if .secret.defaultMode }}
            defaultMode: {{ .secret.defaultMode }}
            {{- end }}
            {{- if .secret.optional }}
            optional: {{ .secret.optional }}
            {{- end }}
          {{- end }}
        {{- end }}
      {{- end }}
  {{- if .Values.statefulset.volumeClaimTemplates }}
  volumeClaimTemplates:
    {{- toYaml .Values.statefulset.volumeClaimTemplates | nindent 4 }}
  {{- end }}
{{- end }}