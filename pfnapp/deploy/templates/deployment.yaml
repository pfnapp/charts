{{- if eq .Values.deploymentType "deployment" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "deploy.fullname" . }}{{- if .Values.logging.enabled }}-service{{- end }}
  {{- if .Values.reloader.enabled }}
  annotations:
    reloader.stakater.com/auto: "true"
  {{- end }}
  labels:
    {{- include "deploy.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "deploy.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "deploy.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "deploy.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if or .Values.tolerations .Values.logging.enabled }}
      tolerations:
        {{- if .Values.tolerations }}
        {{- toYaml .Values.tolerations | nindent 8 }}
        {{- end }}
        {{- if .Values.logging.enabled }}
        - key: "logging"
          operator: "Equal"
          value: "true"
          effect: "NoSchedule"
        {{- end }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.image.command }}
          command:
            {{- range .Values.image.command }}
            - {{ . | quote }}
            {{- end }}
          {{- end }}
          {{- if .Values.image.args }}
          args:
            {{- range .Values.image.args }}
            - {{ . | quote }}
            {{- end }}
          {{- end }}
          ports:
            {{- range .Values.containerPorts }}
            - name: {{ .name }}
              containerPort: {{ .containerPort }}
              protocol: TCP
            {{- end }}
          {{- if .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          {{- else if and .Values.simpleLivenessProbe .Values.simpleLivenessProbe.httpGet .Values.simpleLivenessProbe.httpGet.path }}
          livenessProbe:
            httpGet:
              path: {{ .Values.simpleLivenessProbe.httpGet.path }}
              port: {{ .Values.simpleLivenessProbe.httpGet.port | default "http" }}
            initialDelaySeconds: {{ .Values.simpleLivenessProbe.initialDelaySeconds | default 30 }}
            periodSeconds: {{ .Values.simpleLivenessProbe.periodSeconds | default 10 }}
            timeoutSeconds: {{ .Values.simpleLivenessProbe.timeoutSeconds | default 5 }}
            failureThreshold: {{ .Values.simpleLivenessProbe.failureThreshold | default 3 }}
          {{- end }}
          {{- if .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          {{- else if and .Values.simpleReadinessProbe .Values.simpleReadinessProbe.httpGet .Values.simpleReadinessProbe.httpGet.path }}
          readinessProbe:
            httpGet:
              path: {{ .Values.simpleReadinessProbe.httpGet.path }}
              port: {{ .Values.simpleReadinessProbe.httpGet.port | default "http" }}
            initialDelaySeconds: {{ .Values.simpleReadinessProbe.initialDelaySeconds | default 5 }}
            periodSeconds: {{ .Values.simpleReadinessProbe.periodSeconds | default 5 }}
            timeoutSeconds: {{ .Values.simpleReadinessProbe.timeoutSeconds | default 3 }}
            failureThreshold: {{ .Values.simpleReadinessProbe.failureThreshold | default 3 }}
          {{- end }}
          {{- if .Values.startupProbe }}
          startupProbe:
            {{- toYaml .Values.startupProbe | nindent 12 }}
          {{- else if and .Values.simpleStartupProbe .Values.simpleStartupProbe.httpGet .Values.simpleStartupProbe.httpGet.path }}
          startupProbe:
            httpGet:
              path: {{ .Values.simpleStartupProbe.httpGet.path }}
              port: {{ .Values.simpleStartupProbe.httpGet.port | default "http" }}
            initialDelaySeconds: {{ .Values.simpleStartupProbe.initialDelaySeconds | default 10 }}
            periodSeconds: {{ .Values.simpleStartupProbe.periodSeconds | default 5 }}
            timeoutSeconds: {{ .Values.simpleStartupProbe.timeoutSeconds | default 3 }}
            failureThreshold: {{ .Values.simpleStartupProbe.failureThreshold | default 30 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if .Values.env }}
          env:
            {{- range .Values.env }}
            - name: {{ .name }}
              {{- if .value }}
              value: {{ .value | quote }}
              {{- else if .valueFrom }}
              valueFrom:
                {{- if .valueFrom.configMapKeyRef }}
                configMapKeyRef:
                  name: {{ .valueFrom.configMapKeyRef.name }}
                  key: {{ .valueFrom.configMapKeyRef.key }}
                  {{- if .valueFrom.configMapKeyRef.optional }}
                  optional: {{ .valueFrom.configMapKeyRef.optional }}
                  {{- end }}
                {{- else if .valueFrom.secretKeyRef }}
                secretKeyRef:
                  name: {{ .valueFrom.secretKeyRef.name }}
                  key: {{ .valueFrom.secretKeyRef.key }}
                  {{- if .valueFrom.secretKeyRef.optional }}
                  optional: {{ .valueFrom.secretKeyRef.optional }}
                  {{- end }}
                {{- else if .valueFrom.fieldRef }}
                fieldRef:
                  fieldPath: {{ .valueFrom.fieldRef.fieldPath }}
                {{- else if .valueFrom.resourceFieldRef }}
                resourceFieldRef:
                  resource: {{ .valueFrom.resourceFieldRef.resource }}
                  {{- if .valueFrom.resourceFieldRef.containerName }}
                  containerName: {{ .valueFrom.resourceFieldRef.containerName }}
                  {{- end }}
                  {{- if .valueFrom.resourceFieldRef.divisor }}
                  divisor: {{ .valueFrom.resourceFieldRef.divisor }}
                  {{- end }}
                {{- end }}
              {{- end }}
            {{- end }}
          {{- end }}
          {{- if or .Values.configMap.enabled .Values.secret.enabled .Values.envFrom }}
          envFrom:
            {{- if .Values.configMap.enabled }}
            - configMapRef:
                name: {{ include "deploy.fullname" . }}-config
            {{- end }}
            {{- if .Values.secret.enabled }}
            - secretRef:
                name: {{ include "deploy.fullname" . }}-secret
            {{- end }}
            {{- range .Values.envFrom }}
            {{- if .configMapRef }}
            - configMapRef:
                name: {{ .configMapRef.name }}
                {{- if .configMapRef.optional }}
                optional: {{ .configMapRef.optional }}
                {{- end }}
            {{- else if .secretRef }}
            - secretRef:
                name: {{ .secretRef.name }}
                {{- if .secretRef.optional }}
                optional: {{ .secretRef.optional }}
                {{- end }}
            {{- end }}
          {{- end }}
          {{- end }}
          {{- if or .Values.volumeMounts .Values.simpleMounts .Values.simpleVolumes .Values.simpleStorage .Values.volumeConfigMaps.enabled .Values.volumeSecrets.enabled }}
          volumeMounts:
            {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
            {{- range $index, $mount := .Values.simpleMounts }}
            - name: simple-mount-{{ $index }}
              mountPath: {{ $mount.mountPath }}
            {{- end }}
            {{- range $index, $volume := .Values.simpleVolumes }}
            - name: {{ $volume.name | default (printf "simple-volume-%d" $index) }}
              mountPath: {{ $volume.mountPath }}
            {{- end }}
            {{- range $storage := .Values.simpleStorage }}
            {{- $cleanPath := $storage.path | trimPrefix "/" | replace "/" "-" }}
            - name: {{ $storage.name | default ($cleanPath | default "root") }}
              mountPath: {{ $storage.path }}
            {{- end }}
            {{- include "deploy.volumeMounts.mounts" . | nindent 12 }}
          {{- end }}
      {{- if or .Values.volumes .Values.simpleMounts .Values.simpleVolumes .Values.simpleStorage .Values.volumeConfigMaps.enabled .Values.volumeSecrets.enabled }}
      volumes:
        {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- range $index, $mount := .Values.simpleMounts }}
        - name: simple-mount-{{ $index }}
          {{- if $mount.configMap }}
          configMap:
            name: {{ $mount.configMap }}
          {{- else if $mount.secret }}
          secret:
            secretName: {{ $mount.secret }}
          {{- end }}
        {{- end }}
        {{- range $index, $volume := .Values.simpleVolumes }}
        - name: {{ $volume.name | default (printf "simple-volume-%d" $index) }}
          persistentVolumeClaim:
            claimName: {{ include "deploy.fullname" $ }}-{{ $volume.name | default (printf "simple-volume-%d" $index) }}
        {{- end }}
        {{- range $storage := .Values.simpleStorage }}
        {{- $cleanPath := $storage.path | trimPrefix "/" | replace "/" "-" }}
        - name: {{ $storage.name | default ($cleanPath | default "root") }}
          persistentVolumeClaim:
            claimName: {{ include "deploy.fullname" $ }}-{{ $storage.name | default ($cleanPath | default "root") }}
        {{- end }}
        {{- include "deploy.volumeMounts.volumes" . | nindent 8 }}
      {{- end }}
{{- end }}
{{- if or .Values.simpleVolumes .Values.simpleStorage }}
---
{{- range $index, $volume := .Values.simpleVolumes }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "deploy.fullname" $ }}-{{ $volume.name | default (printf "simple-volume-%d" $index) }}
  labels:
    {{- include "deploy.labels" $ | nindent 4 }}
spec:
  accessModes:
    {{- range $volume.accessModes | default (list "ReadWriteOnce") }}
    - {{ . }}
    {{- end }}
  storageClassName: {{ $volume.storageClass }}
  resources:
    requests:
      storage: {{ $volume.size }}
---
{{- end }}
{{- range $storage := .Values.simpleStorage }}
{{- $cleanPath := $storage.path | trimPrefix "/" | replace "/" "-" }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "deploy.fullname" $ }}-{{ $storage.name | default ($cleanPath | default "root") }}
  labels:
    {{- include "deploy.labels" $ | nindent 4 }}
spec:
  accessModes:
    {{- range $storage.accessModes | default (list "ReadWriteMany") }}
    - {{ . }}
    {{- end }}
  storageClassName: {{ $storage.class }}
  resources:
    requests:
      storage: {{ $storage.size }}
---
{{- end }}
{{- end }}
{{- include "deploy.volumeMounts.resources" . }}